{"version":3,"sources":["/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/core/services/invoices.service.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/core/services/mock/mock.data.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/core/services/mock/mock.products.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/core/services/mock/models/invoice.mock.model.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/core/services/mock/models/product.mock.model.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/core/store/actions/invoices.actions.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/core/store/invoices.state.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/core/store/models/invoices.state.model.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoice-item/invoice-item.component.css","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoice-item/invoice-item.component.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoice-item/models/invoice-item.view-model.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoice-item/models/product.view-model.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoice-list/invoice-list.component.css","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoice-list/invoice-list.component.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoices.component.scss","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoices.component.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoices.module.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/products/src/lib/core/store/actions/product.actions.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/products/src/lib/core/store/models/products.state.model.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/products/src/lib/core/store/products.state.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/products/src/lib/products.module.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/products/src/lib/products/products.component.css","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/products/src/lib/products/products.component.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/shared/src/lib/enums/invoice-status.enum.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/shared/src/lib/interfaces/invoice.interface.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/shared/src/lib/shared.module.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoice-item/invoice-item.component.html","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoice-list/invoice-list.component.html","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoices.component.html","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/products/src/lib/products/products.component.html","src/app/app.component.html","$_lazy_route_resource lazy namespace object","src/app/app.component.scss","src/app/app.component.ts","src/app/app.module.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {IInvoiceDto} from './interfaces/invoice-dto.interface';\nimport {getMockInvoices} from './mock/mock.data';\nimport {Store} from '@ngxs/store';\nimport {tap} from 'rxjs/operators';\nimport {LoadInvoicesAction} from '../store/actions/invoices.actions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvoicesService {\n\n  constructor(private store: Store) {\n  }\n\n  loadInvoices(): Observable<IInvoiceDto[]> {\n    const state: any = this.store.snapshot();\n\n    return this.getInvoices().pipe(\n      tap((items) => {\n        this.store.dispatch(new LoadInvoicesAction(items));\n      })\n    );\n  }\n\n\n  private getInvoices(): Observable<IInvoiceDto[]> {\n    return of(getMockInvoices(10));\n  }\n}\n","import {ProductMockModel} from './models/product.mock.model';\nimport {InvoiceMockModel} from './models/invoice.mock.model';\nimport {IProductDto} from '../interfaces/product-dto.interface';\nimport {IInvoiceDto} from '../interfaces/invoice-dto.interface';\nimport {IMockProduct, MockProductsLookup} from './mock.products';\nimport * as _ from 'lodash';\nimport {InvoiceStatusEnum} from '@angular-invoice/shared/lib/enums/invoice-status.enum';\n\nexport function getMockInvoices(n: number): IInvoiceDto[] {\n  const invoices: IInvoiceDto[] = [];\n  for (let i = 0; i < n; i++) {\n    invoices.push(new InvoiceMockModel(\n      {\n        id: 100 + i,\n        info: {\n          status: InvoiceStatusEnum.sent,\n          number: Math.floor(Math.random() * 100000 + 1),\n          series: Math.random().toString(36).substr(2, 2).toLocaleUpperCase(),\n          client: `Client ${Math.floor(Math.random() * 100 + 1)}`\n        },\n        products: getProducts()\n      }\n    ));\n  }\n  return invoices;\n}\n\nfunction getProducts(): IProductDto[] {\n  const products: IProductDto[] = [];\n  for (let i: number = 0; i < 5; i++) {\n    const product: IMockProduct = _.sample(MockProductsLookup) || <IMockProduct>{};\n    products.push(new ProductMockModel(\n      {\n        id: product.id,\n        name: product.name,\n        code: `SK-${product.id}`,\n        price: Math.floor(Math.random() * 400 + 1) + 100,\n        quantity: Math.floor(Math.random() * 5 + 1)\n      }\n    ));\n  }\n  return products;\n}\n","export interface IMockProduct {\n    id: number;\n    name: string;\n}\n\nexport const MockProductsLookup: IMockProduct[] = [{\n    id: 1,\n    name: 'Muffin - Banana Nut Individual'\n}, {\n    id: 2,\n    name: 'Beef - Rouladin, Sliced'\n}, {\n    id: 3,\n    name: 'Daves Island Stinger'\n}, {\n    id: 4,\n    name: 'Soup - Cream Of Broccoli, Dry'\n}, {\n    id: 5,\n    name: 'Arctic Char - Fillets'\n}, {\n    id: 6,\n    name: 'Lychee'\n}, {\n    id: 7,\n    name: 'Wine - Redchard Merritt'\n}, {\n    id: 8,\n    name: 'Cheese - St. Paulin'\n}, {\n    id: 9,\n    name: 'Blouse / Shirt / Sweater'\n}, {\n    id: 10,\n    name: 'Phyllo Dough'\n}, {\n    id: 11,\n    name: 'Ecolab - Orange Frc, Cleaner'\n}, {\n    id: 12,\n    name: 'Cup - 4oz Translucent'\n}, {\n    id: 13,\n    name: 'Pepsi - 600ml'\n}, {\n    id: 14,\n    name: 'Coffee - Hazelnut Cream'\n}, {\n    id: 15,\n    name: 'Zucchini - Green'\n}, {\n    id: 16,\n    name: 'Bag - Clear 7 Lb'\n}, {\n    id: 17,\n    name: 'Soup - Campbells, Minestrone'\n}, {\n    id: 18,\n    name: 'Soap - Hand Soap'\n}, {\n    id: 19,\n    name: 'Wanton Wrap'\n}, {\n    id: 20,\n    name: 'Mudslide'\n}];\n","import {IInvoiceDto} from '../../interfaces/invoice-dto.interface';\nimport {IProductDto} from '../../interfaces/product-dto.interface';\nimport {IInvoiceInfo} from '@angular-invoice/shared/lib/interfaces/invoice.interface';\n\nexport class InvoiceMockModel implements IInvoiceDto {\n  id: number;\n  info: IInvoiceInfo;\n  products: IProductDto[];\n\n  constructor(invoice: IInvoiceDto) {\n    this.id = invoice.id;\n    this.info = invoice.info;\n    this.products = invoice.products;\n  }\n}\n","import {IProductDto} from '../../interfaces/product-dto.interface';\n\nexport class ProductMockModel implements IProductDto {\n  id: number;\n  name: string;\n  code: string;\n  price: number;\n  quantity: number;\n\n  constructor(product: IProductDto) {\n    this.id = product.id;\n    this.name = product.name;\n    this.code = product.code;\n    this.price = product.price;\n    this.quantity = product.quantity;\n  }\n}\n","import {IInvoiceDto} from '../../services/interfaces/invoice-dto.interface';\nimport {IProductSpecs} from '@angular-invoice/shared/lib/interfaces/invoice.interface';\n\nexport class CreateInvoiceAction {\n  static readonly type = '[Invoice] Create';\n\n  constructor() {\n  }\n}\n\nexport class LoadInvoicesAction {\n  static readonly type = '[Invoices] Load';\n  constructor(public invoices: IInvoiceDto[]) {}\n}\n\nexport class UpdateInvoiceAction {\n  static readonly type = '[Invoice] Update';\n  constructor(public id: number, public changes: Partial<IInvoiceDto>) {}\n}\n\nexport class UpdateInvoiceProductAction {\n  static readonly type = '[Invoice] Update Products';\n\n  constructor(public invoiceId: number, public productId: number, public changes: Partial<IProductSpecs>) {\n  }\n}\n\nexport class DeleteInvoiceAction {\n  static readonly type = '[Invoice] Delete';\n  constructor(public id: number) {}\n}\n\nexport class SetActiveInvoiceAction {\n  static readonly type = '[Invoice] Set Active Invoice';\n\n  constructor(public invoiceId: number) {\n  }\n}\n\nexport class AddProductToInvoiceAction {\n  static readonly type = '[Invoice] Add Product to Invoice';\n\n  constructor(public invoiceId: number, public productId: number) {\n  }\n}\n","import {Action, createSelector, Selector, State, StateContext, Store} from '@ngxs/store';\nimport {IInvoicesState, InvoicesMap, InvoicesStateModel} from './models/invoices.state.model';\nimport {\n  AddProductToInvoiceAction,\n  CreateInvoiceAction,\n  DeleteInvoiceAction,\n  LoadInvoicesAction,\n  SetActiveInvoiceAction,\n  UpdateInvoiceProductAction\n} from './actions/invoices.actions';\nimport {IInvoiceDto} from '../services/interfaces/invoice-dto.interface';\nimport * as _ from 'lodash';\nimport {\n  DraftInvoiceStateModel,\n  IInvoiceItemState,\n  InvoiceItemStateModel,\n  InvoiceProducts\n} from '@angular-invoice/shared/lib/interfaces/invoice.interface';\nimport {LoadProductsAction} from '@angular-invoice/feature/products/lib/core/store/actions/product.actions';\nimport {IProductDto} from '@angular-invoice/feature/invoices/lib/core/services/interfaces/product-dto.interface';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\n@State<IInvoicesState>({\n  name: 'invoices',\n  defaults: InvoicesState.default\n})\nexport class InvoicesState {\n  static default = new InvoicesStateModel();\n\n  constructor(private store: Store) {\n  }\n\n  @Selector()\n  static Invoices(state: IInvoicesState): InvoicesMap {\n    return state.items;\n  }\n\n  @Selector()\n  static getActiveInvoiceId(state: IInvoicesState): number {\n    return state.activeInvoiceId;\n  }\n\n  @Selector()\n  static getActiveInvoice(state: IInvoicesState): IInvoiceItemState | undefined {\n    if (!state.activeInvoiceId) {\n      return;\n    }\n    return state.items[state.activeInvoiceId];\n  }\n\n  static getInvoiceById(invoiceId: number): (...args: any[]) => InvoiceItemStateModel {\n    return createSelector([InvoicesState], (state: IInvoicesState) => state.items[invoiceId]);\n  }\n\n  @Action(LoadInvoicesAction)\n  loadInvoices({patchState}: StateContext<IInvoicesState>, {invoices}: LoadInvoicesAction): void {\n    const products: any[] = invoices.reduce((accum: any[], invoice: IInvoiceDto) => {\n      return accum.concat(invoice.products);\n    }, []);\n\n    this.store.dispatch(new LoadProductsAction(products));\n\n    const mappedInvoices: InvoiceItemStateModel[] = invoices.map((invoice: IInvoiceDto) =>\n      new InvoiceItemStateModel({\n          id: invoice.id,\n          info: invoice.info,\n          productsSpecsById: invoice.products.reduce((productsSpecs: InvoiceProducts, product: IProductDto) => {\n            productsSpecs[product.id] = {quantity: product.quantity};\n            return productsSpecs;\n          }, {})\n        }\n      ));\n\n    this.store.dispatch(new SetActiveInvoiceAction(mappedInvoices[0].id));\n\n    const invoicesMap: InvoicesMap = _.keyBy(mappedInvoices, 'id');\n\n    patchState({\n      items: invoicesMap\n    });\n  }\n\n  @Action(CreateInvoiceAction)\n  createInvoice({getState, patchState}: StateContext<IInvoicesState>, action: CreateInvoiceAction): void {\n    const state: InvoicesStateModel = getState();\n    const newInvoiceId: number = (_.max(_.values(state.items).map((invoice: InvoiceItemStateModel) => invoice.id)) || -1) + 1;\n\n    patchState({\n      items: {...state.items, [newInvoiceId]: new DraftInvoiceStateModel(newInvoiceId)}\n    });\n\n    this.store.dispatch(new SetActiveInvoiceAction(newInvoiceId));\n  }\n\n  @Action(SetActiveInvoiceAction)\n  setActiveInvoice({patchState}: StateContext<IInvoicesState>, {invoiceId}: SetActiveInvoiceAction): void {\n    patchState({\n      activeInvoiceId: invoiceId\n    });\n  }\n\n  @Action(AddProductToInvoiceAction)\n  addProductToInvoice({getState, patchState}: StateContext<IInvoicesState>, {invoiceId, productId}: AddProductToInvoiceAction): void {\n    const state = getState();\n    patchState({\n      items: {\n        ...state.items,\n        [invoiceId]: {\n          ...state.items[invoiceId],\n          productsSpecsById: {\n            ...state.items[invoiceId].productsSpecsById,\n            [productId]: {quantity: 1}\n          }\n        }\n      }\n    });\n  }\n\n  @Action(DeleteInvoiceAction)\n  deleteInvoice({getState, patchState}: StateContext<IInvoicesState>, {id}: DeleteInvoiceAction): void {\n    const state: InvoicesStateModel = getState();\n    const {[id]: deleted, ...remaining} = state.items;\n    patchState({\n      items: remaining\n    });\n  }\n\n  @Action(UpdateInvoiceProductAction)\n  updatedInvoiceProduct({getState, patchState}: StateContext<IInvoicesState>,\n                        {invoiceId, productId, changes}: UpdateInvoiceProductAction): void {\n\n    const copyOfState: InvoicesStateModel = {...getState()};\n\n    patchState({\n      items: {\n        ...copyOfState.items,\n        [invoiceId]: {\n          ...copyOfState.items[invoiceId],\n          productsSpecsById: {\n            ...copyOfState.items[invoiceId].productsSpecsById,\n            [productId]: {\n              ...copyOfState.items[invoiceId].productsSpecsById[productId],\n              ...changes\n            }\n          }\n        }\n      }\n    });\n  }\n}\n","import {InvoiceItemStateModel} from '@angular-invoice/shared/lib/interfaces/invoice.interface';\n\n\nexport interface IInvoicesState {\n  items: InvoicesMap;\n  invoiceProductsById: Map<number, number[]>;\n  activeInvoiceId: number;\n}\n\nexport class InvoicesStateModel implements IInvoicesState {\n  items: InvoicesMap;\n  invoiceProductsById: Map<number, number[]>;\n  activeInvoiceId: number;\n\n  constructor(state: Partial<IInvoicesState> = {}) {\n    this.items = state.items || {};\n    this.activeInvoiceId = state.activeInvoiceId || 0;\n    this.invoiceProductsById = state.invoiceProductsById || new Map();\n  }\n}\n\nexport interface InvoicesMap {\n  [id: number]: InvoiceItemStateModel;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL2ZlYXR1cmUvaW52b2ljZXMvc3JjL2xpYi9pbnZvaWNlLWl0ZW0vaW52b2ljZS1pdGVtLmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, Input} from '@angular/core';\nimport {Store} from '@ngxs/store';\nimport {map, switchMap} from 'rxjs/operators';\nimport {ProductViewModel} from './models/product.view-model';\nimport {InvoiceItemViewModel} from './models/invoice-item.view-model';\nimport * as _ from 'lodash';\nimport {Observable} from 'rxjs';\nimport {of} from 'rxjs/internal/observable/of';\nimport {InvoiceStatusEnum} from '@angular-invoice/shared/lib/enums/invoice-status.enum';\nimport {IInvoiceItemState, InvoiceItemStateModel, IProductSpecs} from '@angular-invoice/shared/lib/interfaces/invoice.interface';\nimport {ProductsState} from '@angular-invoice/feature/products/lib/core/store/products.state';\nimport {IProductsMap} from '@angular-invoice/feature/products/lib/core/store/models/products.state.model';\nimport {IProduct} from '@angular-invoice/shared/lib/interfaces/product.interface';\nimport {\n  AddProductToInvoiceAction,\n  UpdateInvoiceProductAction\n} from '@angular-invoice/feature/invoices/lib/core/store/actions/invoices.actions';\nimport {InvoicesState} from '@angular-invoice/feature/invoices/lib/core/store/invoices.state';\n\n@Component({\n  selector: 'app-invoice-item',\n  templateUrl: './invoice-item.component.html',\n  styleUrls: ['./invoice-item.component.css']\n})\nexport class InvoiceItemComponent {\n\n  invoice!: InvoiceItemViewModel;\n  invoiceStatuses: typeof InvoiceStatusEnum = InvoiceStatusEnum;\n  stateProducts$: Observable<IProductsMap>;\n\n  constructor(private store: Store) {\n    this.stateProducts$ = this.store.select(ProductsState.getProducts)\n      .pipe(map((products: IProductsMap) => _.values(products)));\n  }\n\n  @Input('invoice') set _invoice(invoice: IInvoiceItemState) {\n    if (this.invoice && this.invoice.id === invoice.id || !invoice) {\n      return;\n    }\n    this.invoice = this.createViewModel(invoice);\n  }\n\n  createViewModel(invoice: IInvoiceItemState): InvoiceItemViewModel {\n    const products$: Observable<ProductViewModel[]> = this.store.select(InvoicesState.getInvoiceById(invoice.id)).pipe(\n      switchMap((invoiceState: InvoiceItemStateModel) => {\n        const productIds: number[] = _.keys(invoiceState.productsSpecsById).map((id: string) => parseInt(id, 10));\n        if (!productIds.length) {\n          return of([]);\n        }\n        return this.store.select(ProductsState.getProductsWithIds(productIds)).pipe(\n          map((stateProducts: IProduct[]) => stateProducts.map((product: IProduct) => {\n            return new ProductViewModel({...product, ...invoice.productsSpecsById[product.id]});\n          })));\n      })\n    );\n    return new InvoiceItemViewModel({...invoice, products$});\n  }\n\n  addNewProduct(product: IProduct): void {\n    this.store.dispatch(new AddProductToInvoiceAction(this.invoice.id, product.id));\n  }\n\n  updateInvoiceProducts(productId: number, product: Partial<IProductSpecs>): void {\n    this.store.dispatch(new UpdateInvoiceProductAction(this.invoice.id, productId, product));\n  }\n\n  private snapshot(): any {\n    return this.store.snapshot();\n  }\n\n}\n","import {ProductViewModel} from './product.view-model';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport * as _ from 'lodash';\nimport {IInvoiceInfo, IInvoiceItemState, InvoiceProducts} from '@angular-invoice/shared/lib/interfaces/invoice.interface';\n\n\ninterface IInvoiceItemViewModel {\n  id: number;\n  info: IInvoiceInfo;\n  products$: Observable<ProductViewModel[]>;\n  productsSpecsById: InvoiceProducts;\n  editMode?: boolean;\n}\n\nexport class InvoiceItemViewModel implements IInvoiceItemState, IInvoiceItemViewModel {\n  id: number;\n  info: IInvoiceInfo;\n  products$: Observable<ProductViewModel[]>;\n  productsSpecsById: InvoiceProducts;\n  invoiceTotal$: Observable<number>;\n  editMode: boolean = true;\n\n  constructor(invoice: IInvoiceItemViewModel) {\n    this.id = invoice.id;\n    this.info = invoice.info;\n    this.products$ = invoice.products$;\n    this.productsSpecsById = invoice.productsSpecsById;\n    this.editMode = invoice.editMode || false;\n\n    this.invoiceTotal$ = invoice.products$.pipe(map((products: ProductViewModel[]) =>\n      _.sum(products.map((product: ProductViewModel) => product.price * product.quantity))));\n  }\n\n  public toggleEditMode(): void {\n    this.editMode = !this.editMode;\n  }\n\n}\n","import {IProduct} from '@angular-invoice/shared/lib/interfaces/product.interface';\n\n\nexport interface IProductViewModel extends IProduct {\n  quantity: number;\n}\n\nexport class ProductViewModel {\n  id: number;\n  name: string;\n  code: string;\n  price: number;\n  quantity: number;\n\n  constructor(product: IProductViewModel) {\n    this.id = product.id;\n    this.name = product.name;\n    this.code = product.code;\n    this.price = product.price;\n    this.quantity = product.quantity;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL2ZlYXR1cmUvaW52b2ljZXMvc3JjL2xpYi9pbnZvaWNlLWxpc3QvaW52b2ljZS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-invoice-list',\n  templateUrl: './invoice-list.component.html',\n  styleUrls: ['./invoice-list.component.css']\n})\nexport class InvoiceListComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".list-group-item {\\n  height: 50px;\\n}\\n.list-group-item .delete-btn {\\n  display: none;\\n}\\n.list-group-item:hover .delete-btn {\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2FuZ3VsYXItaW52b2ljZS9hbmd1bGFyLWludm9pY2UvZnJvbnRlbmQvYW5ndWxhci1pbnZvaWNlL2xpYnMvZmVhdHVyZS9pbnZvaWNlcy9zcmMvbGliL2ludm9pY2VzLmNvbXBvbmVudC5zY3NzIiwibGlicy9mZWF0dXJlL2ludm9pY2VzL3NyYy9saWIvaW52b2ljZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFBO0FDQ0Y7QURDRTtFQUNFLGFBQUE7QUNDSjtBREdJO0VBQ0UsY0FBQTtBQ0ROIiwiZmlsZSI6ImxpYnMvZmVhdHVyZS9pbnZvaWNlcy9zcmMvbGliL2ludm9pY2VzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxpc3QtZ3JvdXAtaXRlbSB7XG4gIGhlaWdodDogNTBweDtcblxuICAuZGVsZXRlLWJ0biB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gICY6aG92ZXIge1xuICAgIC5kZWxldGUtYnRuIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbiAgfVxufVxuIiwiLmxpc3QtZ3JvdXAtaXRlbSB7XG4gIGhlaWdodDogNTBweDtcbn1cbi5saXN0LWdyb3VwLWl0ZW0gLmRlbGV0ZS1idG4ge1xuICBkaXNwbGF5OiBub25lO1xufVxuLmxpc3QtZ3JvdXAtaXRlbTpob3ZlciAuZGVsZXRlLWJ0biB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufSJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {Select, Store} from '@ngxs/store';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport * as _ from 'lodash';\nimport {IInvoiceItemState, InvoiceItemStateModel} from '@angular-invoice/shared/lib/interfaces/invoice.interface';\nimport {InvoicesMap} from '@angular-invoice/feature/invoices/lib/core/store/models/invoices.state.model';\nimport {\n  CreateInvoiceAction,\n  DeleteInvoiceAction,\n  SetActiveInvoiceAction\n} from '@angular-invoice/feature/invoices/lib/core/store/actions/invoices.actions';\nimport {InvoicesService} from '@angular-invoice/feature/invoices/lib/core/services/invoices.service';\nimport {InvoicesState} from '@angular-invoice/feature/invoices/lib/core/store/invoices.state';\n\n@Component({\n  selector: 'app-invoices',\n  templateUrl: './invoices.component.html',\n  styleUrls: ['./invoices.component.scss']\n})\nexport class InvoicesComponent implements OnInit {\n\n  @Select(InvoicesState.getActiveInvoice) activeInvoice$!: Observable<IInvoiceItemState>;\n\n  invoices$: Observable<InvoiceItemStateModel[]>;\n\n  constructor(private api: InvoicesService, private store: Store) {\n    this.invoices$ = this.store.select(InvoicesState.Invoices).pipe(\n      map((invoices: InvoicesMap) => _.values(invoices))\n    );\n  }\n\n  ngOnInit(): void {\n    if (!_.values(this.snapshot().invoices.items).length) {\n      this.api.loadInvoices().subscribe();\n    }\n  }\n\n  deleteInvoice(invoiceId: number): void {\n    if (confirm('Delete?')) {\n      this.store.dispatch(new DeleteInvoiceAction(invoiceId));\n    }\n  }\n\n  selectInvoice(invoiceId: number): void {\n    this.store.dispatch(new SetActiveInvoiceAction(invoiceId));\n  }\n\n  createNewInvoice(): void {\n    this.store.dispatch(new CreateInvoiceAction());\n  }\n\n  private snapshot(): any {\n    return this.store.snapshot();\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {InvoicesComponent} from './invoices.component';\nimport {InvoiceItemComponent} from './invoice-item/invoice-item.component';\nimport {InvoiceListComponent} from './invoice-list/invoice-list.component';\nimport {FormsModule} from '@angular/forms';\nimport {InvoicesService} from './core/services/invoices.service';\nimport {NgxsModule} from '@ngxs/store';\nimport {InvoicesState} from '@angular-invoice/feature/invoices/lib/core/store/invoices.state';\nimport {RouterModule} from '@angular/router';\nimport {SharedModule} from '@angular-invoice/shared/lib/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    NgxsModule.forFeature([InvoicesState]),\n    RouterModule.forChild([\n      {\n        path: '',\n        component: InvoicesComponent\n      }\n    ])\n  ],\n  declarations: [InvoicesComponent, InvoiceItemComponent, InvoiceListComponent],\n  providers: [InvoicesService]\n})\nexport class InvoicesModule {\n}\n","import {IProductDto} from '@angular-invoice/feature/invoices/lib/core/services/interfaces/product-dto.interface';\nimport {IProduct} from '@angular-invoice/shared/lib/interfaces/product.interface';\n\nexport class LoadProductsAction {\n  static readonly type = '[Products] Load';\n\n  constructor(public items: IProductDto[]) {\n  }\n}\n\nexport class AddProductAction {\n  static readonly type = '[Product] Add';\n\n  constructor(public product: IProductDto) {\n  }\n}\n\nexport class BulkAddProductAction {\n  static readonly type = '[Product] Bulk Add';\n\n  constructor(public products: IProductDto[]) {\n  }\n}\n\nexport class UpdateProductAction {\n  static readonly type = '[Product] Update';\n\n  constructor(public id: number, public changes: Partial<IProduct>) {\n  }\n}\n\nexport class DeleteProductAction {\n  static readonly type = '[Product] Delete';\n  constructor(public id: number) {}\n}\n","import {IProductSpecs} from '@angular-invoice/shared/lib/interfaces/invoice.interface';\nimport {IProduct} from '@angular-invoice/shared/lib/interfaces/product.interface';\n\n\nexport interface IProductsState {\n  items: IProductsMap;\n  productsSpecsByInvoiceId: Map<number, IProductSpecs[]>;\n}\n\nexport class ProductsStateModel implements IProductsState {\n  items: IProductsMap;\n  productsSpecsByInvoiceId: Map<number, IProductSpecs[]>;\n\n  constructor(state: Partial<IProductsState> = {}) {\n    this.items = state.items || {};\n    this.productsSpecsByInvoiceId = state.productsSpecsByInvoiceId\n      || <Map<number, IProductSpecs[]>>{};\n  }\n}\n\nexport interface IProductsMap {\n  [id: number]: IProduct;\n}\n","import {Action, createSelector, Selector, State, StateContext} from '@ngxs/store';\nimport {IProductsMap, IProductsState, ProductsStateModel} from './models/products.state.model';\nimport {DeleteProductAction, LoadProductsAction, UpdateProductAction} from './actions/product.actions';\nimport {IProduct} from '@angular-invoice/shared/lib/interfaces/product.interface';\nimport {IProductDto} from '@angular-invoice/feature/invoices/lib/core/services/interfaces/product-dto.interface';\n\n@State<IProductsState>({\n  name: 'products',\n  defaults: ProductsState.default\n})\nexport class ProductsState {\n  static default: ProductsStateModel = new ProductsStateModel();\n\n  @Selector()\n  static products(state: IProductsState): unknown[] {\n    return Object.keys(state.items).map((key: string) => state.items[parseInt(key, 10)]);\n  }\n\n  @Selector()\n  static getProducts(state: IProductsState): IProductsMap {\n    return state.items;\n  }\n\n\n  static getProductsWithIds(productIds: number[]): (...args: any[]) => IProduct[] {\n    return createSelector([ProductsState], (state: IProductsState) => {\n      return productIds.map((productId: number) => state.items[productId]);\n    });\n  }\n\n  @Action(LoadProductsAction)\n  loadProducts({getState, patchState}: StateContext<IProductsState>, {items}: LoadProductsAction): void {\n    patchState({\n      items: items.reduce((obj: IProductsMap, product: IProductDto) => {\n        obj[product.id] = product;\n        return obj;\n      }, {})\n    });\n  }\n\n  @Action(DeleteProductAction)\n  deleteProduct({getState, patchState}: StateContext<IProductsState>, {id}: DeleteProductAction): void {\n    const state: IProductsState = getState();\n    delete state.items[id];\n    patchState({\n      items: {...state.items}\n    });\n  }\n\n  @Action(UpdateProductAction)\n  updateProduct({getState, patchState}: StateContext<IProductsState>, {id, changes}: UpdateProductAction): void {\n    const state: IProductsState = getState();\n    patchState({\n      items: {...state.items, [id]: {...state.items[id], ...changes}}\n    });\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ProductsComponent} from './products/products.component';\nimport {FormsModule} from '@angular/forms';\nimport {NgxsModule} from '@ngxs/store';\nimport {ProductsState} from '@angular-invoice/feature/products/lib/core/store/products.state';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgxsModule.forFeature([ProductsState])\n  ],\n  declarations: [ProductsComponent]\n})\nexport class ProductsModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL2ZlYXR1cmUvcHJvZHVjdHMvc3JjL2xpYi9wcm9kdWN0cy9wcm9kdWN0cy5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Select, Store} from '@ngxs/store';\nimport {DeleteProductAction, UpdateProductAction} from '@angular-invoice/feature/products/lib/core/store/actions/product.actions';\nimport {ProductsState} from '@angular-invoice/feature/products/lib/core/store/products.state';\nimport {IProduct} from '@angular-invoice/shared/lib/interfaces/product.interface';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  @Select(ProductsState.products)\n  products$!: Observable<any>;\n\n  constructor(private store: Store) {\n  }\n\n  ngOnInit() {\n  }\n\n  removeProduct(id: number): void {\n    this.store.dispatch(new DeleteProductAction(id));\n  }\n\n  updateProduct(id: number, changes: Partial<IProduct>): void {\n    this.store.dispatch(new UpdateProductAction(id, changes));\n  }\n\n}\n","export enum InvoiceStatusEnum {\n  draft = 'Draft',\n  sent = 'Sent',\n  paid = 'Paid',\n  overdue = 'Overdue',\n}\n","import {InvoiceStatusEnum} from '../enums/invoice-status.enum';\n\nexport interface IInvoiceItemState {\n  id: number;\n  info: IInvoiceInfo;\n  productsSpecsById: InvoiceProducts;\n}\n\nexport class InvoiceItemStateModel implements IInvoiceItemState {\n  id: number;\n  info: IInvoiceInfo;\n  productsSpecsById: InvoiceProducts;\n\n  constructor(invoice: IInvoiceItemState) {\n    this.id = invoice.id;\n    this.info = invoice.info;\n    this.productsSpecsById = invoice.productsSpecsById;\n  }\n}\n\nexport interface IInvoiceInfo {\n  number: number;\n  series: string;\n  client: string;\n  status: InvoiceStatusEnum;\n}\n\nexport interface IProductSpecs {\n  quantity: number;\n  price?: number;\n}\n\nexport interface InvoiceProducts {\n  [id: number]: IProductSpecs;\n}\n\nexport class DraftInvoiceStateModel implements IInvoiceItemState {\n  info: IInvoiceInfo;\n  productsSpecsById: InvoiceProducts;\n\n  constructor(public id: number) {\n    // TODO: Add series from state\n    this.info = {client: 'n/a', number: id, series: 'SK', status: InvoiceStatusEnum.draft};\n    this.productsSpecsById = {};\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\nimport {SelectDropDownModule} from 'ngx-select-dropdown';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxDatatableModule,\n    SelectDropDownModule\n  ],\n  declarations: [],\n  exports: [\n    NgxDatatableModule,\n    SelectDropDownModule\n  ]\n})\nexport class SharedModule {\n}\n","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    Invoice\\n    <strong>{{invoice.info.series}} {{invoice.info.number}}</strong>\\n    <div class=\\\"d-inline\\\">\\n      <span class=\\\"float-right\\\"> <strong>Status:</strong> {{invoice.info.status}}</span>\\n      <button (click)=\\\"invoice.toggleEditMode()\\\"\\n              class=\\\"btn btn-sm btn-success ml-2\\\">{{invoice.editMode ? 'Save' : 'Edit'}}</button>\\n    </div>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"row mb-4\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <h6 class=\\\"mb-3\\\">From:</h6>\\n        <div>\\n          <strong>Dumitru</strong>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-sm-6\\\">\\n        <h6 class=\\\"mb-3\\\">To:</h6>\\n        <div>\\n          <strong>{{invoice.info.client}}</strong>\\n        </div>\\n      </div>\\n\\n\\n    </div>\\n\\n    <div class=\\\"table-responsive-sm\\\">\\n      <table class=\\\"table table-striped\\\">\\n        <thead>\\n        <tr>\\n          <th class=\\\"center\\\">SKU</th>\\n          <th>Item</th>\\n\\n          <th class=\\\"right\\\">Unit Cost</th>\\n          <th class=\\\"center\\\">Qty</th>\\n          <th class=\\\"right\\\">Total</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <ng-container [ngTemplateOutlet]=\\\"displayProducts\\\"></ng-container>\\n        </tbody>\\n      </table>\\n\\n      <ng-container *ngIf=\\\"invoice?.info?.status === invoiceStatuses.draft || invoice?.editMode\\\">\\n        <h3>Add product to invoice</h3>\\n        <ngx-select-dropdown\\n          (change)=\\\"addNewProduct($event.value)\\\"\\n          [config]=\\\"{displayKey: 'name', search: true}\\\"\\n          [options]=\\\"stateProducts$ | async\\\">\\n        </ngx-select-dropdown>\\n      </ng-container>\\n\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-4 col-sm-5\\\">\\n\\n      </div>\\n\\n      <div class=\\\"col-lg-4 col-sm-5 ml-auto\\\">\\n        <table class=\\\"table table-clear\\\">\\n          <tbody>\\n          <tr>\\n            <td class=\\\"left\\\">\\n              <strong>Total</strong>\\n            </td>\\n            <td class=\\\"right\\\">\\n              <strong>{{invoice.invoiceTotal$ | async}}</strong>\\n            </td>\\n          </tr>\\n          </tbody>\\n        </table>\\n\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\\n<ng-template #displayProducts>\\n  <tr *ngFor=\\\"let product of invoice.products$ | async\\\">\\n    <td class=\\\"center\\\">{{product.code}}</td>\\n    <td class=\\\"left\\\">{{product.name}}</td>\\n\\n    <td class=\\\"center\\\">\\n      <input (change)=\\\"updateInvoiceProducts(product.id, {price: $event.target.valueAsNumber})\\\" *ngIf=\\\"invoice.editMode\\\"\\n             [ngModel]=\\\"product.price\\\" class=\\\"form-control\\\"\\n             type=\\\"number\\\">\\n      <ng-container *ngIf=\\\"!invoice.editMode\\\">{{product.price}}</ng-container>\\n    </td>\\n    <td class=\\\"center\\\">\\n      <input (change)=\\\"updateInvoiceProducts(product.id, {quantity: $event.target.valueAsNumber})\\\"\\n             *ngIf=\\\"invoice.editMode\\\"\\n             [ngModel]=\\\"product.quantity\\\" class=\\\"form-control\\\"\\n             type=\\\"number\\\">\\n      <ng-container *ngIf=\\\"!invoice.editMode\\\">{{product.quantity}}</ng-container>\\n    </td>\\n    <td class=\\\"right\\\">{{product.price * product.quantity}}</td>\\n  </tr>\\n</ng-template>\\n\"","export default \"<p>\\n  invoice-list works!\\n</p>\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row mt-4\\\">\\n    <div class=\\\"col-md-3\\\">\\n      <div class=\\\"list-group\\\">\\n        <li (click)=\\\"selectInvoice(invoice?.id)\\\" *ngFor=\\\"let invoice of invoices$ | async\\\"\\n            [ngClass]=\\\"{'active': invoice?.id === (activeInvoice$ | async)?.id}\\\"\\n            class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\n          Invoice {{ invoice.id }}\\n          <button (click)=\\\"deleteInvoice(invoice.id)\\\" class=\\\"btn btn-sm btn-danger delete-btn\\\">Delete</button>\\n        </li>\\n        <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\n          <button (click)=\\\"createNewInvoice()\\\" class=\\\"btn btn-sm btn-success\\\">Create new Invoice</button>\\n        </li>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-9\\\">\\n      <app-invoice-item *ngIf=\\\"activeInvoice$\\\" [invoice]=\\\"(activeInvoice$ | async)\\\"></app-invoice-item>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n  <table class=\\\"table table-striped\\\">\\n    <thead>\\n    <tr>\\n      <th class=\\\"center\\\">N</th>\\n      <th class=\\\"center\\\">SKU</th>\\n      <th>Item</th>\\n\\n      <th class=\\\"right\\\">Unit Cost</th>\\n      <th class=\\\"right\\\">Actions</th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let product of products$ | async; let i = index\\\">\\n      <td class=\\\"center\\\">{{i}}</td>\\n      <td class=\\\"center\\\">{{product.code}}</td>\\n      <td class=\\\"left\\\">{{product.name}}</td>\\n\\n      <td class=\\\"right\\\">\\n        <input (change)=\\\"updateProduct(product.id, {price: $event.target.valueAsNumber})\\\" [ngModel]=\\\"product.price\\\"\\n               class=\\\"form-control\\\"\\n               type=\\\"number\\\">\\n      </td>\\n      <td class=\\\"right\\\">\\n        <button (click)=\\\"removeProduct(product.id)\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">SmarterBill</a>\\n  <button aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\"\\n          class=\\\"navbar-toggler\\\" data-target=\\\"#navbarSupportedContent\\\" data-toggle=\\\"collapse\\\" type=\\\"button\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a [routerLink]=\\\"'invoices'\\\" class=\\\"nav-link\\\" href=\\\"#\\\">Invoices</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a [routerLink]=\\\"'products'\\\" class=\\\"nav-link\\\" href=\\\"#\\\">Products</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a [routerLink]=\\\"'clients'\\\" class=\\\"nav-link\\\" href=\\\"#\\\">Clients</a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input aria-label=\\\"Search\\\" class=\\\"form-control mr-sm-2\\\" placeholder=\\\"Global search\\\" type=\\\"search\\\">\\n      <button class=\\\"btn btn-outline-light my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n    </form>\\n  </div>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FuZ3VsYXItaW52b2ljZS9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'angular-invoice-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-invoice';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {RouterModule} from '@angular/router';\nimport {NgxsModule} from '@ngxs/store';\nimport {environment} from '../environments/environment';\nimport {NgxsLoggerPluginModule} from '@ngxs/logger-plugin';\nimport {ProductsComponent} from '@angular-invoice/feature/products/lib/products/products.component';\nimport {ProductsModule} from '@angular-invoice/feature/products/lib/products.module';\nimport {InvoicesComponent} from '@angular-invoice/feature/invoices/lib/invoices.component';\nimport {InvoicesModule} from '@angular-invoice/feature/invoices/lib/invoices.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    ProductsModule,\n    InvoicesModule,\n    RouterModule.forRoot([\n      {\n        path: 'invoices',\n        component: InvoicesComponent\n        // loadChildren: () => import(\"@angular-invoice/feature/invoices/index\").then(m => m.InvoicesModule),\n      },\n      {\n        path: 'products',\n        component: ProductsComponent\n      },\n      {\n        path: 'clients',\n        loadChildren: () => import('@angular-invoice/feature/clients/index').then(m => m.ClientsModule),\n      }\n    ]),\n    NgxsLoggerPluginModule.forRoot(),\n    NgxsModule.forRoot([], {\n      developmentMode: !environment.production,\n      selectorOptions: {injectContainerState: false, suppressErrors: false}\n    }),\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}