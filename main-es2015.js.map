{"version":3,"sources":["/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/core/services/invoices.service.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/core/services/mock/mock.data.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/core/services/mock/mock.products.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/core/services/mock/models/invoice.mock.model.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/core/services/mock/models/product.mock.model.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/core/store/actions/invoices.actions.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/core/store/invoices.state.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/core/store/models/invoices.state.model.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoice-item/invoice-item.component.css","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoice-item/invoice-item.component.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoice-item/models/invoice-item.view-model.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoice-item/models/product.view-model.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoice-list/invoice-list.component.css","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoice-list/invoice-list.component.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoices.component.scss","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoices.component.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoices.module.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/products/src/lib/core/store/actions/product.actions.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/products/src/lib/core/store/models/products.state.model.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/products/src/lib/core/store/products.state.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/products/src/lib/products.module.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/products/src/lib/products/products.component.css","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/products/src/lib/products/products.component.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/shared/src/lib/enums/invoice-status.enum.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/shared/src/lib/interfaces/invoice.interface.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/shared/src/lib/shared.module.ts","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoice-item/invoice-item.component.html","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoice-list/invoice-list.component.html","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/invoices/src/lib/invoices.component.html","/home/runner/work/angular-invoice/angular-invoice/frontend/angular-invoice/libs/feature/products/src/lib/products/products.component.html","./src/app/app.component.html","./$_lazy_route_resource lazy namespace object","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {IInvoiceDto} from './interfaces/invoice-dto.interface';\nimport {getMockInvoices} from './mock/mock.data';\nimport {Store} from '@ngxs/store';\nimport {tap} from 'rxjs/operators';\nimport {LoadInvoicesAction} from '../store/actions/invoices.actions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvoicesService {\n\n  constructor(private store: Store) {\n  }\n\n  loadInvoices(): Observable<IInvoiceDto[]> {\n    const state: any = this.store.snapshot();\n\n    return this.getInvoices().pipe(\n      tap((items) => {\n        this.store.dispatch(new LoadInvoicesAction(items));\n      })\n    );\n  }\n\n\n  private getInvoices(): Observable<IInvoiceDto[]> {\n    return of(getMockInvoices(10));\n  }\n}\n","import {ProductMockModel} from './models/product.mock.model';\nimport {InvoiceMockModel} from './models/invoice.mock.model';\nimport {IProductDto} from '../interfaces/product-dto.interface';\nimport {IInvoiceDto} from '../interfaces/invoice-dto.interface';\nimport {IMockProduct, MockProductsLookup} from './mock.products';\nimport * as _ from 'lodash';\nimport {InvoiceStatusEnum} from '@angular-invoice/shared/lib/enums/invoice-status.enum';\n\nexport function getMockInvoices(n: number): IInvoiceDto[] {\n  const invoices: IInvoiceDto[] = [];\n  for (let i = 0; i < n; i++) {\n    invoices.push(new InvoiceMockModel(\n      {\n        id: 100 + i,\n        info: {\n          status: InvoiceStatusEnum.sent,\n          number: Math.floor(Math.random() * 100000 + 1),\n          series: Math.random().toString(36).substr(2, 2).toLocaleUpperCase(),\n          client: `Client ${Math.floor(Math.random() * 100 + 1)}`\n        },\n        products: getProducts()\n      }\n    ));\n  }\n  return invoices;\n}\n\nfunction getProducts(): IProductDto[] {\n  const products: IProductDto[] = [];\n  for (let i: number = 0; i < 5; i++) {\n    const product: IMockProduct = _.sample(MockProductsLookup) || <IMockProduct>{};\n    products.push(new ProductMockModel(\n      {\n        id: product.id,\n        name: product.name,\n        code: `SK-${product.id}`,\n        price: Math.floor(Math.random() * 400 + 1) + 100,\n        quantity: Math.floor(Math.random() * 5 + 1)\n      }\n    ));\n  }\n  return products;\n}\n","export interface IMockProduct {\n    id: number;\n    name: string;\n}\n\nexport const MockProductsLookup: IMockProduct[] = [{\n    id: 1,\n    name: 'Muffin - Banana Nut Individual'\n}, {\n    id: 2,\n    name: 'Beef - Rouladin, Sliced'\n}, {\n    id: 3,\n    name: 'Daves Island Stinger'\n}, {\n    id: 4,\n    name: 'Soup - Cream Of Broccoli, Dry'\n}, {\n    id: 5,\n    name: 'Arctic Char - Fillets'\n}, {\n    id: 6,\n    name: 'Lychee'\n}, {\n    id: 7,\n    name: 'Wine - Redchard Merritt'\n}, {\n    id: 8,\n    name: 'Cheese - St. Paulin'\n}, {\n    id: 9,\n    name: 'Blouse / Shirt / Sweater'\n}, {\n    id: 10,\n    name: 'Phyllo Dough'\n}, {\n    id: 11,\n    name: 'Ecolab - Orange Frc, Cleaner'\n}, {\n    id: 12,\n    name: 'Cup - 4oz Translucent'\n}, {\n    id: 13,\n    name: 'Pepsi - 600ml'\n}, {\n    id: 14,\n    name: 'Coffee - Hazelnut Cream'\n}, {\n    id: 15,\n    name: 'Zucchini - Green'\n}, {\n    id: 16,\n    name: 'Bag - Clear 7 Lb'\n}, {\n    id: 17,\n    name: 'Soup - Campbells, Minestrone'\n}, {\n    id: 18,\n    name: 'Soap - Hand Soap'\n}, {\n    id: 19,\n    name: 'Wanton Wrap'\n}, {\n    id: 20,\n    name: 'Mudslide'\n}];\n","import {IInvoiceDto} from '../../interfaces/invoice-dto.interface';\nimport {IProductDto} from '../../interfaces/product-dto.interface';\nimport {IInvoiceInfo} from '@angular-invoice/shared/lib/interfaces/invoice.interface';\n\nexport class InvoiceMockModel implements IInvoiceDto {\n  id: number;\n  info: IInvoiceInfo;\n  products: IProductDto[];\n\n  constructor(invoice: IInvoiceDto) {\n    this.id = invoice.id;\n    this.info = invoice.info;\n    this.products = invoice.products;\n  }\n}\n","import {IProductDto} from '../../interfaces/product-dto.interface';\n\nexport class ProductMockModel implements IProductDto {\n  id: number;\n  name: string;\n  code: string;\n  price: number;\n  quantity: number;\n\n  constructor(product: IProductDto) {\n    this.id = product.id;\n    this.name = product.name;\n    this.code = product.code;\n    this.price = product.price;\n    this.quantity = product.quantity;\n  }\n}\n","import {IInvoiceDto} from '../../services/interfaces/invoice-dto.interface';\nimport {IProductSpecs} from '@angular-invoice/shared/lib/interfaces/invoice.interface';\n\nexport class CreateInvoiceAction {\n  static readonly type = '[Invoice] Create';\n\n  constructor() {\n  }\n}\n\nexport class LoadInvoicesAction {\n  static readonly type = '[Invoices] Load';\n  constructor(public invoices: IInvoiceDto[]) {}\n}\n\nexport class UpdateInvoiceAction {\n  static readonly type = '[Invoice] Update';\n  constructor(public id: number, public changes: Partial<IInvoiceDto>) {}\n}\n\nexport class UpdateInvoiceProductAction {\n  static readonly type = '[Invoice] Update Products';\n\n  constructor(public invoiceId: number, public productId: number, public changes: Partial<IProductSpecs>) {\n  }\n}\n\nexport class DeleteInvoiceAction {\n  static readonly type = '[Invoice] Delete';\n  constructor(public id: number) {}\n}\n\nexport class SetActiveInvoiceAction {\n  static readonly type = '[Invoice] Set Active Invoice';\n\n  constructor(public invoiceId: number) {\n  }\n}\n\nexport class AddProductToInvoiceAction {\n  static readonly type = '[Invoice] Add Product to Invoice';\n\n  constructor(public invoiceId: number, public productId: number) {\n  }\n}\n","import {Action, createSelector, Selector, State, StateContext, Store} from '@ngxs/store';\nimport {IInvoicesState, InvoicesMap, InvoicesStateModel} from './models/invoices.state.model';\nimport {\n  AddProductToInvoiceAction,\n  CreateInvoiceAction,\n  DeleteInvoiceAction,\n  LoadInvoicesAction,\n  SetActiveInvoiceAction,\n  UpdateInvoiceProductAction\n} from './actions/invoices.actions';\nimport {IInvoiceDto} from '../services/interfaces/invoice-dto.interface';\nimport * as _ from 'lodash';\nimport {\n  DraftInvoiceStateModel,\n  IInvoiceItemState,\n  InvoiceItemStateModel,\n  InvoiceProducts\n} from '@angular-invoice/shared/lib/interfaces/invoice.interface';\nimport {LoadProductsAction} from '@angular-invoice/feature/products/lib/core/store/actions/product.actions';\nimport {IProductDto} from '@angular-invoice/feature/invoices/lib/core/services/interfaces/product-dto.interface';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\n@State<IInvoicesState>({\n  name: 'invoices',\n  defaults: InvoicesState.default\n})\nexport class InvoicesState {\n  static default = new InvoicesStateModel();\n\n  constructor(private store: Store) {\n  }\n\n  @Selector()\n  static Invoices(state: IInvoicesState): InvoicesMap {\n    return state.items;\n  }\n\n  @Selector()\n  static getActiveInvoiceId(state: IInvoicesState): number {\n    return state.activeInvoiceId;\n  }\n\n  @Selector()\n  static getActiveInvoice(state: IInvoicesState): IInvoiceItemState | undefined {\n    if (!state.activeInvoiceId) {\n      return;\n    }\n    return state.items[state.activeInvoiceId];\n  }\n\n  static getInvoiceById(invoiceId: number): (...args: any[]) => InvoiceItemStateModel {\n    return createSelector([InvoicesState], (state: IInvoicesState) => state.items[invoiceId]);\n  }\n\n  @Action(LoadInvoicesAction)\n  loadInvoices({patchState}: StateContext<IInvoicesState>, {invoices}: LoadInvoicesAction): void {\n    const products: any[] = invoices.reduce((accum: any[], invoice: IInvoiceDto) => {\n      return accum.concat(invoice.products);\n    }, []);\n\n    this.store.dispatch(new LoadProductsAction(products));\n\n    const mappedInvoices: InvoiceItemStateModel[] = invoices.map((invoice: IInvoiceDto) =>\n      new InvoiceItemStateModel({\n          id: invoice.id,\n          info: invoice.info,\n          productsSpecsById: invoice.products.reduce((productsSpecs: InvoiceProducts, product: IProductDto) => {\n            productsSpecs[product.id] = {quantity: product.quantity};\n            return productsSpecs;\n          }, {})\n        }\n      ));\n\n    this.store.dispatch(new SetActiveInvoiceAction(mappedInvoices[0].id));\n\n    const invoicesMap: InvoicesMap = _.keyBy(mappedInvoices, 'id');\n\n    patchState({\n      items: invoicesMap\n    });\n  }\n\n  @Action(CreateInvoiceAction)\n  createInvoice({getState, patchState}: StateContext<IInvoicesState>, action: CreateInvoiceAction): void {\n    const state: InvoicesStateModel = getState();\n    const newInvoiceId: number = (_.max(_.values(state.items).map((invoice: InvoiceItemStateModel) => invoice.id)) || -1) + 1;\n\n    patchState({\n      items: {...state.items, [newInvoiceId]: new DraftInvoiceStateModel(newInvoiceId)}\n    });\n\n    this.store.dispatch(new SetActiveInvoiceAction(newInvoiceId));\n  }\n\n  @Action(SetActiveInvoiceAction)\n  setActiveInvoice({patchState}: StateContext<IInvoicesState>, {invoiceId}: SetActiveInvoiceAction): void {\n    patchState({\n      activeInvoiceId: invoiceId\n    });\n  }\n\n  @Action(AddProductToInvoiceAction)\n  addProductToInvoice({getState, patchState}: StateContext<IInvoicesState>, {invoiceId, productId}: AddProductToInvoiceAction): void {\n    const state = getState();\n    patchState({\n      items: {\n        ...state.items,\n        [invoiceId]: {\n          ...state.items[invoiceId],\n          productsSpecsById: {\n            ...state.items[invoiceId].productsSpecsById,\n            [productId]: {quantity: 1}\n          }\n        }\n      }\n    });\n  }\n\n  @Action(DeleteInvoiceAction)\n  deleteInvoice({getState, patchState}: StateContext<IInvoicesState>, {id}: DeleteInvoiceAction): void {\n    const state: InvoicesStateModel = getState();\n    const {[id]: deleted, ...remaining} = state.items;\n    patchState({\n      items: remaining\n    });\n  }\n\n  @Action(UpdateInvoiceProductAction)\n  updatedInvoiceProduct({getState, patchState}: StateContext<IInvoicesState>,\n                        {invoiceId, productId, changes}: UpdateInvoiceProductAction): void {\n\n    const copyOfState: InvoicesStateModel = {...getState()};\n\n    patchState({\n      items: {\n        ...copyOfState.items,\n        [invoiceId]: {\n          ...copyOfState.items[invoiceId],\n          productsSpecsById: {\n            ...copyOfState.items[invoiceId].productsSpecsById,\n            [productId]: {\n              ...copyOfState.items[invoiceId].productsSpecsById[productId],\n              ...changes\n            }\n          }\n        }\n      }\n    });\n  }\n}\n","import {InvoiceItemStateModel} from '@angular-invoice/shared/lib/interfaces/invoice.interface';\n\n\nexport interface IInvoicesState {\n  items: InvoicesMap;\n  invoiceProductsById: Map<number, number[]>;\n  activeInvoiceId: number;\n}\n\nexport class InvoicesStateModel implements IInvoicesState {\n  items: InvoicesMap;\n  invoiceProductsById: Map<number, number[]>;\n  activeInvoiceId: number;\n\n  constructor(state: Partial<IInvoicesState> = {}) {\n    this.items = state.items || {};\n    this.activeInvoiceId = state.activeInvoiceId || 0;\n    this.invoiceProductsById = state.invoiceProductsById || new Map();\n  }\n}\n\nexport interface InvoicesMap {\n  [id: number]: InvoiceItemStateModel;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL2ZlYXR1cmUvaW52b2ljZXMvc3JjL2xpYi9pbnZvaWNlLWl0ZW0vaW52b2ljZS1pdGVtLmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, Input} from '@angular/core';\nimport {Store} from '@ngxs/store';\nimport {map, switchMap} from 'rxjs/operators';\nimport {ProductViewModel} from './models/product.view-model';\nimport {InvoiceItemViewModel} from './models/invoice-item.view-model';\nimport * as _ from 'lodash';\nimport {Observable} from 'rxjs';\nimport {of} from 'rxjs/internal/observable/of';\nimport {InvoiceStatusEnum} from '@angular-invoice/shared/lib/enums/invoice-status.enum';\nimport {IInvoiceItemState, InvoiceItemStateModel, IProductSpecs} from '@angular-invoice/shared/lib/interfaces/invoice.interface';\nimport {ProductsState} from '@angular-invoice/feature/products/lib/core/store/products.state';\nimport {IProductsMap} from '@angular-invoice/feature/products/lib/core/store/models/products.state.model';\nimport {IProduct} from '@angular-invoice/shared/lib/interfaces/product.interface';\nimport {\n  AddProductToInvoiceAction,\n  UpdateInvoiceProductAction\n} from '@angular-invoice/feature/invoices/lib/core/store/actions/invoices.actions';\nimport {InvoicesState} from '@angular-invoice/feature/invoices/lib/core/store/invoices.state';\n\n@Component({\n  selector: 'app-invoice-item',\n  templateUrl: './invoice-item.component.html',\n  styleUrls: ['./invoice-item.component.css']\n})\nexport class InvoiceItemComponent {\n\n  invoice!: InvoiceItemViewModel;\n  invoiceStatuses: typeof InvoiceStatusEnum = InvoiceStatusEnum;\n  stateProducts$: Observable<IProductsMap>;\n\n  constructor(private store: Store) {\n    this.stateProducts$ = this.store.select(ProductsState.getProducts)\n      .pipe(map((products: IProductsMap) => _.values(products)));\n  }\n\n  @Input('invoice') set _invoice(invoice: IInvoiceItemState) {\n    if (this.invoice && this.invoice.id === invoice.id || !invoice) {\n      return;\n    }\n    this.invoice = this.createViewModel(invoice);\n  }\n\n  createViewModel(invoice: IInvoiceItemState): InvoiceItemViewModel {\n    const products$: Observable<ProductViewModel[]> = this.store.select(InvoicesState.getInvoiceById(invoice.id)).pipe(\n      switchMap((invoiceState: InvoiceItemStateModel) => {\n        const productIds: number[] = _.keys(invoiceState.productsSpecsById).map((id: string) => parseInt(id, 10));\n        if (!productIds.length) {\n          return of([]);\n        }\n        return this.store.select(ProductsState.getProductsWithIds(productIds)).pipe(\n          map((stateProducts: IProduct[]) => stateProducts.map((product: IProduct) => {\n            return new ProductViewModel({...product, ...invoice.productsSpecsById[product.id]});\n          })));\n      })\n    );\n    return new InvoiceItemViewModel({...invoice, products$});\n  }\n\n  addNewProduct(product: IProduct): void {\n    this.store.dispatch(new AddProductToInvoiceAction(this.invoice.id, product.id));\n  }\n\n  updateInvoiceProducts(productId: number, product: Partial<IProductSpecs>): void {\n    this.store.dispatch(new UpdateInvoiceProductAction(this.invoice.id, productId, product));\n  }\n\n  private snapshot(): any {\n    return this.store.snapshot();\n  }\n\n}\n","import {ProductViewModel} from './product.view-model';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport * as _ from 'lodash';\nimport {IInvoiceInfo, IInvoiceItemState, InvoiceProducts} from '@angular-invoice/shared/lib/interfaces/invoice.interface';\n\n\ninterface IInvoiceItemViewModel {\n  id: number;\n  info: IInvoiceInfo;\n  products$: Observable<ProductViewModel[]>;\n  productsSpecsById: InvoiceProducts;\n  editMode?: boolean;\n}\n\nexport class InvoiceItemViewModel implements IInvoiceItemState, IInvoiceItemViewModel {\n  id: number;\n  info: IInvoiceInfo;\n  products$: Observable<ProductViewModel[]>;\n  productsSpecsById: InvoiceProducts;\n  invoiceTotal$: Observable<number>;\n  editMode: boolean = true;\n\n  constructor(invoice: IInvoiceItemViewModel) {\n    this.id = invoice.id;\n    this.info = invoice.info;\n    this.products$ = invoice.products$;\n    this.productsSpecsById = invoice.productsSpecsById;\n    this.editMode = invoice.editMode || false;\n\n    this.invoiceTotal$ = invoice.products$.pipe(map((products: ProductViewModel[]) =>\n      _.sum(products.map((product: ProductViewModel) => product.price * product.quantity))));\n  }\n\n  public toggleEditMode(): void {\n    this.editMode = !this.editMode;\n  }\n\n}\n","import {IProduct} from '@angular-invoice/shared/lib/interfaces/product.interface';\n\n\nexport interface IProductViewModel extends IProduct {\n  quantity: number;\n}\n\nexport class ProductViewModel {\n  id: number;\n  name: string;\n  code: string;\n  price: number;\n  quantity: number;\n\n  constructor(product: IProductViewModel) {\n    this.id = product.id;\n    this.name = product.name;\n    this.code = product.code;\n    this.price = product.price;\n    this.quantity = product.quantity;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL2ZlYXR1cmUvaW52b2ljZXMvc3JjL2xpYi9pbnZvaWNlLWxpc3QvaW52b2ljZS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-invoice-list',\n  templateUrl: './invoice-list.component.html',\n  styleUrls: ['./invoice-list.component.css']\n})\nexport class InvoiceListComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".list-group-item {\\n  height: 50px;\\n}\\n.list-group-item .delete-btn {\\n  display: none;\\n}\\n.list-group-item:hover .delete-btn {\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2FuZ3VsYXItaW52b2ljZS9hbmd1bGFyLWludm9pY2UvZnJvbnRlbmQvYW5ndWxhci1pbnZvaWNlL2xpYnMvZmVhdHVyZS9pbnZvaWNlcy9zcmMvbGliL2ludm9pY2VzLmNvbXBvbmVudC5zY3NzIiwibGlicy9mZWF0dXJlL2ludm9pY2VzL3NyYy9saWIvaW52b2ljZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFBO0FDQ0Y7QURDRTtFQUNFLGFBQUE7QUNDSjtBREdJO0VBQ0UsY0FBQTtBQ0ROIiwiZmlsZSI6ImxpYnMvZmVhdHVyZS9pbnZvaWNlcy9zcmMvbGliL2ludm9pY2VzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxpc3QtZ3JvdXAtaXRlbSB7XG4gIGhlaWdodDogNTBweDtcblxuICAuZGVsZXRlLWJ0biB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gICY6aG92ZXIge1xuICAgIC5kZWxldGUtYnRuIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbiAgfVxufVxuIiwiLmxpc3QtZ3JvdXAtaXRlbSB7XG4gIGhlaWdodDogNTBweDtcbn1cbi5saXN0LWdyb3VwLWl0ZW0gLmRlbGV0ZS1idG4ge1xuICBkaXNwbGF5OiBub25lO1xufVxuLmxpc3QtZ3JvdXAtaXRlbTpob3ZlciAuZGVsZXRlLWJ0biB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufSJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {Select, Store} from '@ngxs/store';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport * as _ from 'lodash';\nimport {IInvoiceItemState, InvoiceItemStateModel} from '@angular-invoice/shared/lib/interfaces/invoice.interface';\nimport {InvoicesMap} from '@angular-invoice/feature/invoices/lib/core/store/models/invoices.state.model';\nimport {\n  CreateInvoiceAction,\n  DeleteInvoiceAction,\n  SetActiveInvoiceAction\n} from '@angular-invoice/feature/invoices/lib/core/store/actions/invoices.actions';\nimport {InvoicesService} from '@angular-invoice/feature/invoices/lib/core/services/invoices.service';\nimport {InvoicesState} from '@angular-invoice/feature/invoices/lib/core/store/invoices.state';\n\n@Component({\n  selector: 'app-invoices',\n  templateUrl: './invoices.component.html',\n  styleUrls: ['./invoices.component.scss']\n})\nexport class InvoicesComponent implements OnInit {\n\n  @Select(InvoicesState.getActiveInvoice) activeInvoice$!: Observable<IInvoiceItemState>;\n\n  invoices$: Observable<InvoiceItemStateModel[]>;\n\n  constructor(private api: InvoicesService, private store: Store) {\n    this.invoices$ = this.store.select(InvoicesState.Invoices).pipe(\n      map((invoices: InvoicesMap) => _.values(invoices))\n    );\n  }\n\n  ngOnInit(): void {\n    if (!_.values(this.snapshot().invoices.items).length) {\n      this.api.loadInvoices().subscribe();\n    }\n  }\n\n  deleteInvoice(invoiceId: number): void {\n    if (confirm('Delete?')) {\n      this.store.dispatch(new DeleteInvoiceAction(invoiceId));\n    }\n  }\n\n  selectInvoice(invoiceId: number): void {\n    this.store.dispatch(new SetActiveInvoiceAction(invoiceId));\n  }\n\n  createNewInvoice(): void {\n    this.store.dispatch(new CreateInvoiceAction());\n  }\n\n  private snapshot(): any {\n    return this.store.snapshot();\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {InvoicesComponent} from './invoices.component';\nimport {InvoiceItemComponent} from './invoice-item/invoice-item.component';\nimport {InvoiceListComponent} from './invoice-list/invoice-list.component';\nimport {FormsModule} from '@angular/forms';\nimport {InvoicesService} from './core/services/invoices.service';\nimport {NgxsModule} from '@ngxs/store';\nimport {InvoicesState} from '@angular-invoice/feature/invoices/lib/core/store/invoices.state';\nimport {RouterModule} from '@angular/router';\nimport {SharedModule} from '@angular-invoice/shared/lib/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    NgxsModule.forFeature([InvoicesState]),\n    RouterModule.forChild([\n      {\n        path: '',\n        component: InvoicesComponent\n      }\n    ])\n  ],\n  declarations: [InvoicesComponent, InvoiceItemComponent, InvoiceListComponent],\n  providers: [InvoicesService]\n})\nexport class InvoicesModule {\n}\n","import {IProductDto} from '@angular-invoice/feature/invoices/lib/core/services/interfaces/product-dto.interface';\nimport {IProduct} from '@angular-invoice/shared/lib/interfaces/product.interface';\n\nexport class LoadProductsAction {\n  static readonly type = '[Products] Load';\n\n  constructor(public items: IProductDto[]) {\n  }\n}\n\nexport class AddProductAction {\n  static readonly type = '[Product] Add';\n\n  constructor(public product: IProductDto) {\n  }\n}\n\nexport class BulkAddProductAction {\n  static readonly type = '[Product] Bulk Add';\n\n  constructor(public products: IProductDto[]) {\n  }\n}\n\nexport class UpdateProductAction {\n  static readonly type = '[Product] Update';\n\n  constructor(public id: number, public changes: Partial<IProduct>) {\n  }\n}\n\nexport class DeleteProductAction {\n  static readonly type = '[Product] Delete';\n  constructor(public id: number) {}\n}\n","import {IProductSpecs} from '@angular-invoice/shared/lib/interfaces/invoice.interface';\nimport {IProduct} from '@angular-invoice/shared/lib/interfaces/product.interface';\n\n\nexport interface IProductsState {\n  items: IProductsMap;\n  productsSpecsByInvoiceId: Map<number, IProductSpecs[]>;\n}\n\nexport class ProductsStateModel implements IProductsState {\n  items: IProductsMap;\n  productsSpecsByInvoiceId: Map<number, IProductSpecs[]>;\n\n  constructor(state: Partial<IProductsState> = {}) {\n    this.items = state.items || {};\n    this.productsSpecsByInvoiceId = state.productsSpecsByInvoiceId\n      || <Map<number, IProductSpecs[]>>{};\n  }\n}\n\nexport interface IProductsMap {\n  [id: number]: IProduct;\n}\n","import {Action, createSelector, Selector, State, StateContext} from '@ngxs/store';\nimport {IProductsMap, IProductsState, ProductsStateModel} from './models/products.state.model';\nimport {DeleteProductAction, LoadProductsAction, UpdateProductAction} from './actions/product.actions';\nimport {IProduct} from '@angular-invoice/shared/lib/interfaces/product.interface';\nimport {IProductDto} from '@angular-invoice/feature/invoices/lib/core/services/interfaces/product-dto.interface';\n\n@State<IProductsState>({\n  name: 'products',\n  defaults: ProductsState.default\n})\nexport class ProductsState {\n  static default: ProductsStateModel = new ProductsStateModel();\n\n  @Selector()\n  static products(state: IProductsState): unknown[] {\n    return Object.keys(state.items).map((key: string) => state.items[parseInt(key, 10)]);\n  }\n\n  @Selector()\n  static getProducts(state: IProductsState): IProductsMap {\n    return state.items;\n  }\n\n\n  static getProductsWithIds(productIds: number[]): (...args: any[]) => IProduct[] {\n    return createSelector([ProductsState], (state: IProductsState) => {\n      return productIds.map((productId: number) => state.items[productId]);\n    });\n  }\n\n  @Action(LoadProductsAction)\n  loadProducts({getState, patchState}: StateContext<IProductsState>, {items}: LoadProductsAction): void {\n    patchState({\n      items: items.reduce((obj: IProductsMap, product: IProductDto) => {\n        obj[product.id] = product;\n        return obj;\n      }, {})\n    });\n  }\n\n  @Action(DeleteProductAction)\n  deleteProduct({getState, patchState}: StateContext<IProductsState>, {id}: DeleteProductAction): void {\n    const state: IProductsState = getState();\n    delete state.items[id];\n    patchState({\n      items: {...state.items}\n    });\n  }\n\n  @Action(UpdateProductAction)\n  updateProduct({getState, patchState}: StateContext<IProductsState>, {id, changes}: UpdateProductAction): void {\n    const state: IProductsState = getState();\n    patchState({\n      items: {...state.items, [id]: {...state.items[id], ...changes}}\n    });\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ProductsComponent} from './products/products.component';\nimport {FormsModule} from '@angular/forms';\nimport {NgxsModule} from '@ngxs/store';\nimport {ProductsState} from '@angular-invoice/feature/products/lib/core/store/products.state';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgxsModule.forFeature([ProductsState])\n  ],\n  declarations: [ProductsComponent]\n})\nexport class ProductsModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL2ZlYXR1cmUvcHJvZHVjdHMvc3JjL2xpYi9wcm9kdWN0cy9wcm9kdWN0cy5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Select, Store} from '@ngxs/store';\nimport {DeleteProductAction, UpdateProductAction} from '@angular-invoice/feature/products/lib/core/store/actions/product.actions';\nimport {ProductsState} from '@angular-invoice/feature/products/lib/core/store/products.state';\nimport {IProduct} from '@angular-invoice/shared/lib/interfaces/product.interface';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  @Select(ProductsState.products)\n  products$!: Observable<any>;\n\n  constructor(private store: Store) {\n  }\n\n  ngOnInit() {\n  }\n\n  removeProduct(id: number): void {\n    this.store.dispatch(new DeleteProductAction(id));\n  }\n\n  updateProduct(id: number, changes: Partial<IProduct>): void {\n    this.store.dispatch(new UpdateProductAction(id, changes));\n  }\n\n}\n","export enum InvoiceStatusEnum {\n  draft = 'Draft',\n  sent = 'Sent',\n  paid = 'Paid',\n  overdue = 'Overdue',\n}\n","import {InvoiceStatusEnum} from '../enums/invoice-status.enum';\n\nexport interface IInvoiceItemState {\n  id: number;\n  info: IInvoiceInfo;\n  productsSpecsById: InvoiceProducts;\n}\n\nexport class InvoiceItemStateModel implements IInvoiceItemState {\n  id: number;\n  info: IInvoiceInfo;\n  productsSpecsById: InvoiceProducts;\n\n  constructor(invoice: IInvoiceItemState) {\n    this.id = invoice.id;\n    this.info = invoice.info;\n    this.productsSpecsById = invoice.productsSpecsById;\n  }\n}\n\nexport interface IInvoiceInfo {\n  number: number;\n  series: string;\n  client: string;\n  status: InvoiceStatusEnum;\n}\n\nexport interface IProductSpecs {\n  quantity: number;\n  price?: number;\n}\n\nexport interface InvoiceProducts {\n  [id: number]: IProductSpecs;\n}\n\nexport class DraftInvoiceStateModel implements IInvoiceItemState {\n  info: IInvoiceInfo;\n  productsSpecsById: InvoiceProducts;\n\n  constructor(public id: number) {\n    // TODO: Add series from state\n    this.info = {client: 'n/a', number: id, series: 'SK', status: InvoiceStatusEnum.draft};\n    this.productsSpecsById = {};\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\nimport {SelectDropDownModule} from 'ngx-select-dropdown';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxDatatableModule,\n    SelectDropDownModule\n  ],\n  declarations: [],\n  exports: [\n    NgxDatatableModule,\n    SelectDropDownModule\n  ]\n})\nexport class SharedModule {\n}\n","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    Invoice\\n    <strong>{{invoice.info.series}} {{invoice.info.number}}</strong>\\n    <div class=\\\"d-inline\\\">\\n      <span class=\\\"float-right\\\"> <strong>Status:</strong> {{invoice.info.status}}</span>\\n      <button (click)=\\\"invoice.toggleEditMode()\\\"\\n              class=\\\"btn btn-sm btn-success ml-2\\\">{{invoice.editMode ? 'Save' : 'Edit'}}</button>\\n    </div>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"row mb-4\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <h6 class=\\\"mb-3\\\">From:</h6>\\n        <div>\\n          <strong>Dumitru</strong>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-sm-6\\\">\\n        <h6 class=\\\"mb-3\\\">To:</h6>\\n        <div>\\n          <strong>{{invoice.info.client}}</strong>\\n        </div>\\n      </div>\\n\\n\\n    </div>\\n\\n    <div class=\\\"table-responsive-sm\\\">\\n      <table class=\\\"table table-striped\\\">\\n        <thead>\\n        <tr>\\n          <th class=\\\"center\\\">SKU</th>\\n          <th>Item</th>\\n\\n          <th class=\\\"right\\\">Unit Cost</th>\\n          <th class=\\\"center\\\">Qty</th>\\n          <th class=\\\"right\\\">Total</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <ng-container [ngTemplateOutlet]=\\\"displayProducts\\\"></ng-container>\\n        </tbody>\\n      </table>\\n\\n      <ng-container *ngIf=\\\"invoice?.info?.status === invoiceStatuses.draft || invoice?.editMode\\\">\\n        <h3>Add product to invoice</h3>\\n        <ngx-select-dropdown\\n          (change)=\\\"addNewProduct($event.value)\\\"\\n          [config]=\\\"{displayKey: 'name', search: true}\\\"\\n          [options]=\\\"stateProducts$ | async\\\">\\n        </ngx-select-dropdown>\\n      </ng-container>\\n\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-4 col-sm-5\\\">\\n\\n      </div>\\n\\n      <div class=\\\"col-lg-4 col-sm-5 ml-auto\\\">\\n        <table class=\\\"table table-clear\\\">\\n          <tbody>\\n          <tr>\\n            <td class=\\\"left\\\">\\n              <strong>Total</strong>\\n            </td>\\n            <td class=\\\"right\\\">\\n              <strong>{{invoice.invoiceTotal$ | async}}</strong>\\n            </td>\\n          </tr>\\n          </tbody>\\n        </table>\\n\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\\n<ng-template #displayProducts>\\n  <tr *ngFor=\\\"let product of invoice.products$ | async\\\">\\n    <td class=\\\"center\\\">{{product.code}}</td>\\n    <td class=\\\"left\\\">{{product.name}}</td>\\n\\n    <td class=\\\"center\\\">\\n      <input (change)=\\\"updateInvoiceProducts(product.id, {price: $event.target.valueAsNumber})\\\" *ngIf=\\\"invoice.editMode\\\"\\n             [ngModel]=\\\"product.price\\\" class=\\\"form-control\\\"\\n             type=\\\"number\\\">\\n      <ng-container *ngIf=\\\"!invoice.editMode\\\">{{product.price}}</ng-container>\\n    </td>\\n    <td class=\\\"center\\\">\\n      <input (change)=\\\"updateInvoiceProducts(product.id, {quantity: $event.target.valueAsNumber})\\\"\\n             *ngIf=\\\"invoice.editMode\\\"\\n             [ngModel]=\\\"product.quantity\\\" class=\\\"form-control\\\"\\n             type=\\\"number\\\">\\n      <ng-container *ngIf=\\\"!invoice.editMode\\\">{{product.quantity}}</ng-container>\\n    </td>\\n    <td class=\\\"right\\\">{{product.price * product.quantity}}</td>\\n  </tr>\\n</ng-template>\\n\"","export default \"<p>\\n  invoice-list works!\\n</p>\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row mt-4\\\">\\n    <div class=\\\"col-md-3\\\">\\n      <div class=\\\"list-group\\\">\\n        <li (click)=\\\"selectInvoice(invoice?.id)\\\" *ngFor=\\\"let invoice of invoices$ | async\\\"\\n            [ngClass]=\\\"{'active': invoice?.id === (activeInvoice$ | async)?.id}\\\"\\n            class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\n          Invoice {{ invoice.id }}\\n          <button (click)=\\\"deleteInvoice(invoice.id)\\\" class=\\\"btn btn-sm btn-danger delete-btn\\\">Delete</button>\\n        </li>\\n        <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\n          <button (click)=\\\"createNewInvoice()\\\" class=\\\"btn btn-sm btn-success\\\">Create new Invoice</button>\\n        </li>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-9\\\">\\n      <app-invoice-item *ngIf=\\\"activeInvoice$\\\" [invoice]=\\\"(activeInvoice$ | async)\\\"></app-invoice-item>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n  <table class=\\\"table table-striped\\\">\\n    <thead>\\n    <tr>\\n      <th class=\\\"center\\\">N</th>\\n      <th class=\\\"center\\\">SKU</th>\\n      <th>Item</th>\\n\\n      <th class=\\\"right\\\">Unit Cost</th>\\n      <th class=\\\"right\\\">Actions</th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let product of products$ | async; let i = index\\\">\\n      <td class=\\\"center\\\">{{i}}</td>\\n      <td class=\\\"center\\\">{{product.code}}</td>\\n      <td class=\\\"left\\\">{{product.name}}</td>\\n\\n      <td class=\\\"right\\\">\\n        <input (change)=\\\"updateProduct(product.id, {price: $event.target.valueAsNumber})\\\" [ngModel]=\\\"product.price\\\"\\n               class=\\\"form-control\\\"\\n               type=\\\"number\\\">\\n      </td>\\n      <td class=\\\"right\\\">\\n        <button (click)=\\\"removeProduct(product.id)\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">SmarterBill</a>\\n  <button aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\"\\n          class=\\\"navbar-toggler\\\" data-target=\\\"#navbarSupportedContent\\\" data-toggle=\\\"collapse\\\" type=\\\"button\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a [routerLink]=\\\"'invoices'\\\" class=\\\"nav-link\\\" href=\\\"#\\\">Invoices</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a [routerLink]=\\\"'products'\\\" class=\\\"nav-link\\\" href=\\\"#\\\">Products</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a [routerLink]=\\\"'clients'\\\" class=\\\"nav-link\\\" href=\\\"#\\\">Clients</a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input aria-label=\\\"Search\\\" class=\\\"form-control mr-sm-2\\\" placeholder=\\\"Global search\\\" type=\\\"search\\\">\\n      <button class=\\\"btn btn-outline-light my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n    </form>\\n  </div>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2FuZ3VsYXItaW52b2ljZS9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'angular-invoice-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-invoice';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {RouterModule} from '@angular/router';\nimport {NgxsModule} from '@ngxs/store';\nimport {environment} from '../environments/environment';\nimport {NgxsLoggerPluginModule} from '@ngxs/logger-plugin';\nimport {ProductsComponent} from '@angular-invoice/feature/products/lib/products/products.component';\nimport {ProductsModule} from '@angular-invoice/feature/products/lib/products.module';\nimport {InvoicesComponent} from '@angular-invoice/feature/invoices/lib/invoices.component';\nimport {InvoicesModule} from '@angular-invoice/feature/invoices/lib/invoices.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    ProductsModule,\n    InvoicesModule,\n    RouterModule.forRoot([\n      {\n        path: 'invoices',\n        component: InvoicesComponent\n        // loadChildren: () => import(\"@angular-invoice/feature/invoices/index\").then(m => m.InvoicesModule),\n      },\n      {\n        path: 'products',\n        component: ProductsComponent\n      },\n      {\n        path: 'clients',\n        loadChildren: () => import('@angular-invoice/feature/clients/index').then(m => m.ClientsModule),\n      }\n    ]),\n    NgxsLoggerPluginModule.forRoot(),\n    NgxsModule.forRoot([], {\n      developmentMode: !environment.production,\n      selectorOptions: {injectContainerState: false, suppressErrors: false}\n    }),\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}